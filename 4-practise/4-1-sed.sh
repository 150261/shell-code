#!/bin/bash
#文本处理问题

#正则表达式是一种基础的模式匹配技术 可以对文本文件执行过滤、剥离（strip）、替换、搜索等操作
#[a-z0-9_]+ @[a-z0-9]+\.[a-z]+.就是一个典型的能够匹配电子邮件地址的正则表达式

#位置标记
#^ 起始   $ 结尾

#标识符 A字符 . [] [^]

#数量修饰符 ? + * {n} {n,} {n,m}
#{}  |  \

#能够匹配任意单词  ( +[a-zA-Z]+ +)
#( +[a-zA-Z]+[?,.]? +)

#可以匹配文本中的IP地址，但是它并不检查地址的合法性
#[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3} 

#正则表达式用$、^、.、*、+、{以及}等作为特殊字符 普通字符使用 反斜线\

#可视化正则表达式

#grep 在文件中搜索文本

#搜索匹配特定模式的文本行
#grep "pattern" filename

#在多个文件中搜索匹配特定模式的文本行
#grep "match_text" file1 file2 file3 ...

#选项--color可以在输出行中着重标记出匹配到的模式
# grep --color=auto word filename 

#选项-E可以使grep使用扩展正则表达式
#也可以使用默认启用扩展正则表达式的egrep命令

#选项-o可以只输出匹配到的文本
#选项-v可以打印出不匹配match_pattern的所有行
#选项-c能够统计出匹配模式的文本行数
#选项-n可以打印出匹配字符串所在行的行号

#要统计文件中匹配项的数量
echo -e "1 2 3 4\nhello\n5 6" | egrep -o "[0-9]" | wc -l 

# 选项-b可以打印出匹配出现在行中的偏移。配合选项-o可以打印出匹配所在的字符或字节偏移：
#选项-l可以列出匹配模式所在的文件：
grep -l "grep" 4-1-sed.sh 

#递归搜索多个文件
grep "text" . -R -n

#选项-i可以在匹配模式时不考虑字符的大小写
#选项-e可以指定多个匹配模式
#可以将多个模式定义在文件中。选项-f可以读取文件并使用其中的模式（一个模式一行）：

#grep可以在搜索过程中使用通配符指定（include）或排除（exclude）某些文件
#使用--include选项在目录中递归搜索所有的 .c和 .cpp文件：
grep "main()" . -r --include *.{c,cpp}
#使用选项--exclude在搜索过程中排除所有的README文件：
grep "main()" . -r --exclude "README" 
#选项--exclude-dir可以排除目录：
grep main . -r -exclude-dir CVS 
#如果需要从文件中读取排除文件列表，使用--exclude-from FILE

#xargs命令可以为其他命令提供命令行参数列表。当文件名作为命令行参数时，建议用0值字节作为文件名终结符，而非空格。
#选项-Z使得grep使用0值字节（\0）作为文件名的终结符
# grep "test" file* -lZ | xargs -0 rm

#grep的静默输出 静默选项（-q）
#需要匹配行之前或之后的n行。这可以通过控制选项-B和-A来实现

#也可以使用选项-C，它可以分别打印出匹配结果之前及之后的n行
